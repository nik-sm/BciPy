name: BciPy CI/CD

on:
  push:
    # branches: [ main ]
  pull_request:
    # branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.8]
        include:  # sets a variable for locating pip cache
          - os: ubuntu-20.04
            pip_cache_path: ~/.cache/pip
            # - os: macos-latest
            #   pip_cache_path: ~/Library/Caches/pip
            # - os: windows-latest
            #   pip_cache_path: ~\AppData\Local\pip\Cache

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

      # See https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows#matching-a-cache-key
    - name: Restore pip cache
      uses: actions/cache@v2
      with:
        path: ${{ matrix.pip_cache_path }}

        # top priority is the exact match based on hashed requirements
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/dev_requirements.txt') }}

        # next priority are partial matches
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # https://stackoverflow.com/a/57948488/
    - name: Install system libraries
      run: |
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          sudo apt-get -y update
          sudo apt-get -y install python3.8-dev python3.8-tk libgtk-3-dev xvfb
        elif [[ "$RUNNER_OS" == "Windows" ]]; then
          echo Hello, Windows!
          exit 1
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          echo Hello, mac!
          exit 1
        fi
      shell: bash

    - name: Install python packages
      run: |
        make dev-install

    - name: Format 
      run: |
        echo make format
        
    - name: Lint
      run: |
        echo make lint

    - name: Run unit tests
      run: |
        # It is impossible to import psychopy without attaching a display:
        #
        # bcipy/helpers/task.py:6: in <module>
        #     from psychopy import core, event, visual
        # /opt/hostedtoolcache/Python/3.8.9/x64/lib/python3.8/site-packages/psychopy/event.py:61: in <module>
        #     _default_display_ = pyglet.canvas.get_display()
        # /opt/hostedtoolcache/Python/3.8.9/x64/lib/python3.8/site-packages/pyglet/canvas/__init__.py:95: in get_display
        #     return Display()
        # /opt/hostedtoolcache/Python/3.8.9/x64/lib/python3.8/site-packages/pyglet/canvas/xlib.py:123: in __init__
        #     raise NoSuchDisplayException('Cannot connect to "%s"' % name)
        # E   pyglet.canvas.xlib.NoSuchDisplayException: Cannot connect to "None"
        #
        # A workaround is to use Xvfb
        xvfb-run make unit-test

    - name: Run integration tests
      run: |
        xvfb-run make integration-test

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true
        verbose: true

    - name: Deploy
      run: |
        echo DEPLOY!

